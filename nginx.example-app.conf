server {
  listen 8080;
  server_name localhost;

  add_header Access-Control-Allow-Origin <ORIGIN>; # replace <ORIGIN> with the real domain
  add_header X-Frame-Options deny;
  add_header Access-Control-Allow-Credentials false;

  # Generate unique nonce for each request
  set $cspNonce $request_id;

  # Define all external dependencies
  set $globSrc "https://fonts.googleapis.com";
  set $styleSrc "style-src 'self' 'nonce-$cspNonce' https://fonts.googleapis.com;";
  set $fontSrc "font-src 'self' fonts.googleapis.com;";
  set $imgSrc "img-src 'self' data: image/svg+xml;";
  set $cspSrc "default-src 'self' 'nonce-$cspNonce' $globSrc $styleSrc $fontSrc $imgSrc";

  # Security headers
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "deny" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Content-Security-Policy $cspSrc;
  add_header X-Content-Security-Policy $cspSrc;
  add_header X-WebKit-CSP $cspSrc;
  add_header Access-control-Allow-Credentials false;

  location / {
    root /usr/share/nginx/html;
    index index.html;

    # Replace nonce placeholders with actual nonce value
    sub_filter '__CSP_NONCE__' '$cspNonce';
    sub_filter_once off;
    sub_filter_types text/html application/javascript;

    # Handle SPA routing
    try_files $uri $uri/ /index.html;
  }

  # Health check endpoint
  location /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "OK";
  }
}
